{"version":3,"sources":["test.js","App.js","serviceWorker.js","index.js"],"names":["questions","tipusok","nev","description","Points","points","useState","selectedTitle","changeSelectedTitle","selectedDesc","changeSelectedDesc","showDesc","changeShowDesc","sumPoints","Array","length","fill","i","j","max1","max2","HandleClick","index","Card","style","textAlign","Title","Subtitle","Body","Button","onClick","margin","Footer","map","x","key","Modal","show","onHide","Header","closeButton","split","darab","variant","Tab","changeIndex","saveTab","allTabs","currTab","changeCurrTab","ListGroup","slice","question","Item","ToggleButtonGroup","name","type","value","onChange","val","trueValue","newTab","handleRadioClick","ToggleButton","float","Pages","active","ProgressBar","now","label","HollandTest","activeTab","changeActiveTab","tabs","saveTabs","Jumbotron","width","padding","fluid","tabPoints","newTabs","window","scrollTo","top","behavior","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4UAYMA,EAAY,CACV,4CACA,mEACA,kDACA,0CACA,gEACA,mDACA,0DACA,kEACA,sFACA,0DACA,wDACA,mEACA,wDACA,oEACA,4DACA,iEACA,8CACA,qEACA,6DACA,wCACA,6BACA,yGACA,2EACA,uEACA,oEACA,yEACA,wHACA,yCACA,iDACA,iGACA,sEACA,sEACA,sFACA,4DACA,uGACA,kFACA,2GACA,0FACA,qEACA,mFACA,qDACA,yCACA,yDACA,8DACA,8CACA,gDACA,8DACA,8CACA,oEACA,oFACA,4DACA,6DACA,oEACA,qDACA,6BACA,sDACA,2FACA,yEACA,8DACA,kEACA,wEACA,6HACA,uDACA,wCACA,oDACA,2EACA,+CACA,iHACA,yEACA,6EACA,kEACA,4EACA,4DACA,qDACA,+EACA,mGACA,sEACA,qEACA,qDACA,+EACA,8EACA,wEACA,6FACA,oHACA,kDACA,0FACA,2DACA,sEACA,kDACA,qDACA,iEACA,qDACA,mFACA,4FACA,gCACA,gEACA,0FACA,qGACA,oDACA,oEACA,4EACA,0FACA,iHACA,iEACA,6EACA,+DACA,4EACA,+DACA,6HACA,sFACA,0DACA,sEACA,iGACA,mEACA,mEACA,sFACA,0DACA,yDACA,kFACA,yEAGFC,EAAU,CACZ,CACIC,IAAK,WACLC,YAAa,gfAEjB,CACID,IAAK,YACLC,YAAa,2eAEjB,CACID,IAAK,kBACLC,YAAa,mZAEjB,CACID,IAAK,eACLC,YAAa,mdAEjB,CACID,IAAK,mBACLC,YAAa,2dAEjB,CACID,IAAK,iBACLC,YAAa,ydA4BfC,EAAS,SAAC,GAQZ,IAR0B,IAAbC,EAAY,EAAZA,OAAY,EAEoBC,mBAAS,IAF7B,mBAElBC,EAFkB,KAEHC,EAFG,OAGkBF,mBAAS,IAH3B,mBAGlBG,EAHkB,KAGJC,EAHI,OAIUJ,oBAAS,GAJnB,mBAIlBK,EAJkB,KAIRC,EAJQ,KAMnBC,EAAYC,MAAMT,EAAOU,QAAQC,KAAK,GAEpCC,EAAI,EAAGA,EAAIZ,EAAOU,OAAQE,IAC9B,IAAI,IAAIC,EAAI,EAAGA,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","file":"static/js/main.90893976.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\n\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton';\n\nconst questionsPerPage = 20;\nconst questions = [\n        \"Mennyire szeretsz órát javítani?\",\n        \"Mennyire szeretnél gépjármű motorokat javítani?\",\n        \"Mennyire szeretsz bútorokat készíteni?\",\n        \"Mennyire szeretnél daruval dolgozni?\",\n        \"Mennyire szeretsz sztereó berendezést összeszerelni?\",\n        \"Mennyire szeretnél villanyszerelő lenni?\",\n        \"Mennyire szeretnél utánfutós traktort vezetni?\",\n        \"Mennyire szeretnél bútorokat javítani, restaurálni?\",\n        \"Mennyire szeretnél telegráfot, és rádió felszerelést javítani?\",\n        \"Mennyire szeretnél telefont beszerelni, javítani?\",\n        \"Mennyire szeretnél építkezésben dolgozni?\",\n        \"Mennyire szeretnél elektrónikus szerkezeteket felszerelni?\",\n        \"Mennyire szeretnél könyvespolcot építeni?\",\n        \"Mennyire szeretnél építkezési vállalkozó lenni?\",\n        \"Mennyire szeretnél fa játékokat készíteni?\",\n        \"Mennyire szeretnél biztonságiőr vagy gondnok lenni?\",\n        \"Mennyire szeretnél autóbuszt vezetni?\",\n        \"Mennyire szereted a házad körüli dolgokat megjavítani?\",\n        \"Mennyire szeretsz mechanikus eszközöket javítani?\",\n        \"Mennyire szeretnél asztalos lenni?\",\n        \"Mennyire szeretsz kutatni?\",\n        \"Mennyire szeretsz mikroszkópot használni arra, hogy sejteket és baktériumokat vizsgálj?\",\n        \"Mennyire szeretsz könyvet és tudományos folyóiratot olvasni?\",\n        \"Mennyire szeretnél egy laboratóriumban kutatást végezni?\",\n        \"Mennyire szeretnél csillagászati kutatásokat végezni?\",\n        \"Mennyire szeretnéd a szívproblémák okait tanulmányozni?\",\n        \"Mennyire szeretnél matematikát felhasználni egy technikai és tudományos probléma megoldására?\",\n        \"Mennyire szeretnél sebész lenni?\",\n        \"Mennyire szeretnél tengerbiológus lenni?\",\n        \"Mennyire szeretnéd a szennyezett levegő hatásait a természetre tanulmányozni?\",\n        \"Mennyire szeretnél egy új technikai eszközt feltalálni?\",\n        \"Mennyire szeretnéd a napenergia felhasználását kutatni?\",\n        \"Mennyire szeretnél egy műszív elkészítésében részt venni?\",\n        \"Mennyire szeretnél laboratóriumi asszisztens lenni?\",\n        \"Mennyire szeretnél biológia kurzuson részt venni egy iskola vagy egyetem keretein belül?\",\n        \"Mennyire szeretnél a rák elleni orvosság kifejlesztésén dolgozni\",\n        \"Mennyire szeretnél kutatásokat végezni a betegségek irányításával kapcsolatosan?\",\n        \"Mennyire szeretnél orvos lenni mely a betegségek megelőzésén dolgozik?\",\n        \"Mennyire szeretnél tudósoknak segíteni a kutatásukban?\",\n        \"Mennyire szeretnél természettudományi tanulmányokat készíteni?\",\n        \"Mennyire szeretsz mások előtt fellépni?\",\n        \"Mennyire szeretsz művészkedni?\",\n        \"Mennyire szeretsz rövid történeteket írni?\",\n        \"Mennyire szeretsz animációs rajzokat készíteni?\",\n        \"Mennyire szeretnél zenét tanítani?\",\n        \"Mennyire szeretnél egy regényt írni?\",\n        \"Mennyire szeretnél színházi műveket rendezni?\",\n        \"Mennyire szeretnél jazz-énekes lenni?\",\n        \"Mennyire szeretnél TV vagy folyóirat szerkesztő lenni?\",\n        \"Mennyire szereted a nagy zeneszerzők műveinek tanulmányozását?\",\n        \"Mennyire szeretnél egy színpadi művet írni?\",\n        \"Mennyire szeretnél zenét vagy zenei darabot írni?\",\n        \"Mennyire szeretnél egy szimfonikus együttest vezényelni?\",\n        \"Mennyire szeretnél újságcikkeket írni?\",\n        \"Mennyire szeretsz festeni?\",\n        \"Mennyire szeretnél forgatókönyvet írni?\",\n        \"Mennyire szeretnél díszleteket készíteni színházi előadásokra?\",\n        \"Mennyire szeretnél filmeknek háttér zenét készíteni?\",\n        \"Mennyire szeretsz/szeretnél könyvkritikát írni?\",\n        \"Mennyire szeretsz zenei és művészi cikkeket olvasni?\",\n        \"Mennyire szeretsz emberekkel kommunikációról beszélgetni?\",\n        \"Mennyire szeretnél egy fizikailag fogyatékos embernek segíteni abban, hogy felkészüljön egy szakmára?\",\n        \"Mennyire szeretsz segíteni a rászorulóknak?\",\n        \"Mennyire szeretnél tanár lenni?\",\n        \"Mennyire szeretnél szociológiát tanulni?\",\n        \"Mennyire szeretnél tanácsot adni a szegény emberek jogairól?\",\n        \"Mennyire szeretnél beteggondozó lenni?\",\n        \"Mennyire szeretnél börtönből kiszabadultaknak segíteni abban, hogy munkahelyet találjanak?\",\n        \"Mennyire szeretnél felnőtteket tanítani egy mesterségre?\",\n        \"Mennyire szeretnél embereknek segíteni a karrier választásban?\",\n        \"Mennyire szeretnél törvényszegőket felügyelni?\",\n        \"Mennyire szeretnél jótékonysági adományokat gyűjteni?\",\n        \"Mennyire szeretnéd mások programját megtervezni?\",\n        \"Mennyire szeretsz elsősegélyt nyújtani?\",\n        \"Mennyire szeretnél családtanácsadói minőségben dolgozni?\",\n        \"Mennyire szeretnél a munkaadók, és a munkások közötti kapcsolattartó lenni?\",\n        \"Mennyire szeretnél szellemi sérült gyerekeken segíteni?\",\n        \"Mennyire szeretnél megtanulni a rászorulókon segíteni?\",\n        \"Mennyire szeretnél pszichológiát tanulni?\",\n        \"Mennyire szeretnél elítélt gyerekeknek előadásokat tartani?\",\n        \"Mennyire szeretnél sport programot koordinálni egy sportpályán?\",\n        \"Mennyire szeretnél egy adminisztrációs központot vezetni?\",\n        \"Mennyire szeretsz/ Mennyire szeretnél árukat beszerezni egy nagy üzletláncnak?\",\n        \"Mennyire szeretsz/ Mennyire szeretnél számítógéppel és nyomtatóval dolgozni egy irodában?\",\n        \"Mennyire szeretnél eladási manager lenni?\",\n        \"Mennyire szeretnél a munkahelyükkel elégedetlen munkásokat regisztrálni?\",\n        \"Mennyire szeretnél kereskedelemmel pénzt szerezni?\",\n        \"Mennyire szeretnél adminisztratív politikával foglalkozni?\",\n        \"Mennyire szeretnél bank aligazgató lenni?\",\n        \"Mennyire szeretnél egy cég jogásza lenni?\",\n        \"Mennyire szeretnél vezető pozíciót betölteni?\",\n        \"Mennyire szeretnél ingatlan ügynök lenni?\",\n        \"Mennyire szeretnél egy kormányrendelet elfogadásában részt venni?\",\n        \"Mennyire szeretnél részt venni egy új beszerzési piac létrejöttében?\",\n        \"Mennyire szeretsz kereskedni?\",\n        \"Mennyire szeretnél törvényszéki bíró lenni?\",\n        \"Mennyire szeretnél embereket toborozni és felvenni egy nagy cég számára?\",\n        \"Mennyire szeretnél az országban utazni a cég termékeinek eladása céljából?\",\n        \"Mennyire szeretnél termelési manager lenni?\",\n        \"Mennyire szeretnél üzleteket kötni és koordinálni?\",\n        \"Mennyire szeretsz pénzt számolni pl. egy bankban kasszásként?\",\n        \"Mennyire szeretnél pénzügyi adatokat regisztrálni egy cég részére?\",\n        \"Mennyire szeretnél helyet lefoglalni repülőre és hotelbe egy utazási iroda keretein belül?\",\n        \"Mennyire szeretnél könyvelő szakértő lenni?\",\n        \"Mennyire szeretnéd átnézni egy cég költségvetését?\",\n        \"Mennyire szeretnél egy nagy éttermet irányítani?\",\n        \"Mennyire szeretnél fogyócikkek leltárasa lenni egy cégnél?\",\n        \"Mennyire szeretnél számokkal dolgozni egy irodában?\",\n        \"Mennyire szeretnéd egy cég könyvelését elemezni, hogy egy nekik szükséges könyvelést kidolgozz?\",\n        \"Mennyire szeretnéd egy iroda adminisztratív személyzetét felügyelni?\",\n        \"Mennyire szeretnél üzleti matematikát tanulni?\",\n        \"Mennyire szeretnéd bankok könyvelését ellenőrizni?\",\n        \"Mennyire szeretnél számítógépet használni könyvelés céljából?\",\n        \"Mennyire szeretnél egy könyvelési kurzust elvégezni?\",\n        \"Mennyire szeretnél adatokat számítógépbe bevinni?\",\n        \"Mennyire szeretnéd számon tartani az elvégzett munkák költségeit?\",\n        \"Mennyire szeretnél bevételi listával dolgozni?\",\n        \"Mennyire szeretnél recepciós lenni egy hotelben?\",\n        \"Mennyire szeretnél adminisztrációs köztisztségviselő lenni?\",\n        \"Mennyire szeretsz számokkal dolgozni egy számítógépen?\"\n];\n\nconst tipusok = [\n    {\n        nev: 'Realista',\n        description: '- megalkuvó\\n- őszinte\\n- becsületes\\n- engedelmeskedő\\n- anyagias\\n - természetes\\n - következetes\\n - gyakorlatias\\n - szerény\\n - félénk\\n - állandó\\n - takarékos\\n \\n Tárgyakat és eszközöket kezelő tevékenységek felé irányuló törekvés jellemzi. Kézügyessége, műszaki hajlama van. Olyan területeken ér el eredményeket, melyek ezen képességei fejlődését biztosítják.'\n    },\n    {\n        nev: 'Kutató',\n        description: '- elemző\\n - elővigyázatos\\n - kritikus\\n - kíváncsi\\n - független\\n - megismerő\\n - befelé forduló\\n - módszeres\\n - szerény\\n - pontos\\n - ésszerű\\n - visszafogott\\n \\n A különböző formában és területeken végzett kutatások, felderítések iránti különleges hajlam jellemzi. Általában matematikai és tudományos képességei vannak, gyakran egyedül oldja meg a problémákat.'\n    },\n    {\n        nev: 'Művészi',\n        description: '- összetett\\n - rendetlen\\n - érzelmes\\n - kifejező\\n - idealista\\n - leleményes\\n - nem gyakorlatias\\n - impulzív\\n - független\\n - ösztönös\\n - nem megalkuvó\\n - eredeti\\n \\n A kevésbé összetett tevékenységek iránt vonzódik, a kreatív megközelítést és megoldást kedveli. Van művészi hajlama és képzelőereje.'\n    },\n    {\n        nev: 'Szociális',\n        description: '- meggyőző\\n - együttműködő\\n - barátságos\\n - nagylelkű\\n - segítőkész\\n - idealista\\n - feladatközpontú\\n - szívélyes\\n - felelősségtudó\\n - közvetlen\\n - tapintatos\\n - megértő\\n \\n Személyek közötti kapcsolatokat feltételező tevékenységek érdeklik. Előnybe részesíti embertársai nevelését, problémáiknak megoldását stb.'\n    }, \n    {\n        nev: 'Vállalkozó',\n        description: '- bátor\\n - ambiciózus\\n - figyelemfelkeltő\\n - uralkodó\\n - energikus\\n - lobbanékony\\n - optimista\\n - elégedettséget kereső\\n - népszerű\\n - magabiztos\\n - közlékeny\\n - beszédes\\n \\n A csoportmunka érdekli, de elsősorban vezetői szempontból. Elsődlegesen azokat a tevékenységeket kedveli, melyek kezdeményezést, tervezést, tevékenységek egybehangolását stb. feltételezik.'\n    },\n    {\n        nev: 'Hagyományos',\n        description: '- megalkuvó\\n - lelkiismeretes\\n - figyelmes\\n - konzervatív\\n - gátlásos\\n - engedelmes\\n - rendszerető\\n - következetes\\n - gyakorlatias\\n - van önuralma\\n - nincs képzelőereje\\n - hatékony\\n \\n Jól meghatározott és szervezett környezetben, a tárgyak elrendezése és rendszerezése érdekli. Az adminisztratív tevékenységek felé hajlik. Nehezen alkalmazkodik a kétértelmű helyzetekhez.'\n    }\n];\n\nconst HollandTest = () => {\n\n    const [activeTab, changeActiveTab] = useState(1);\n    const [tabs, saveTabs] = useState(Array(6).fill(Array(questionsPerPage).fill(0)));\n\n    const HandleSaveTab = (tabPoints) => {\n        const newTabs = tabs;\n        newTabs[activeTab - 1] = tabPoints;\n        saveTabs([...newTabs]);\n        window.scrollTo({top: 0, behavior: 'smooth'});\n    }\n\n    return (\n        <Jumbotron style={{ width: '85%', padding: '16px' }} fluid>\n            {\n                activeTab <= 6 ? <>\n                <Pages active={activeTab}/>\n            <Tab index={activeTab - 1} changeIndex={changeActiveTab} saveTab={HandleSaveTab} allTabs={tabs} /> </> :\n            <Points points={tabs}/>}\n        </Jumbotron>\n    )\n\n}\n\nconst Points = ({points}) => {\n\n    const [selectedTitle, changeSelectedTitle] = useState('');\n    const [selectedDesc, changeSelectedDesc] = useState('');\n    const [showDesc, changeShowDesc] = useState(false);\n\n    const sumPoints = Array(points.length).fill(0);\n\n    for(let i = 0; i < points.length; i++) {\n        for(let j = 0; j < points[i].length; j++) {\n            sumPoints[i] += points[i][j];\n        }\n    }\n\n    let max1 = 0;\n    let max2 = 1;\n    for(let i = 0; i < sumPoints.length; i++) {\n        if(sumPoints[i] > sumPoints[max1]) {\n            max1 = i;\n            sumPoints[i] = -1;\n            break;\n        }\n    }\n    for(let i = 0; i < sumPoints.length; i++) {\n        if(sumPoints[i] > sumPoints[max2]) {\n            max2 = i;\n            sumPoints[i] = -1;\n            break;\n        }\n    }\n    if(max1 === 0) sumPoints[0] = -1;\n    if(max2 === 1) sumPoints[1] = -1;\n\n    const HandleClick = (index) => {\n        changeSelectedTitle(tipusok[index].nev);\n        changeSelectedDesc(tipusok[index].description);\n        changeShowDesc(true);\n    }\n\n    return (\n        <>\n        <Card style={{textAlign: 'center'}}>\n            <Card.Title>Ezekhez a kategóriákhoz tartozol:</Card.Title>\n            <Card.Subtitle>(Kattints rá további információkért)</Card.Subtitle>\n            <Card.Body>\n                    <Button onClick={() => HandleClick(max1)} style={{margin: '16px'}}>{tipusok[max1].nev}</Button>\n                    <Button onClick={() => HandleClick(max2)} style={{margin: '16px'}}>{tipusok[max2].nev}</Button>\n            </Card.Body>\n            <Card.Footer>\n                <p>További kategóriák:</p>\n                {\n                    sumPoints.map((x, index) => x !== -1 ?\n                    <Button onClick={() => HandleClick(index)} key={index} style={{margin: '16px'}}>{tipusok[index].nev}</Button> : '')\n                }\n            </Card.Footer>\n        </Card>\n        <Modal show={showDesc} onHide={() => changeShowDesc(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{selectedTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{selectedDesc.split('\\n').map((darab, i) => <p key={i}>{darab}</p>)}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => changeShowDesc(false)}>\n            Bezárás\n          </Button>\n        </Modal.Footer>\n      </Modal>\n        </>\n    )\n\n}\n\nconst Tab = ({ index, changeIndex, saveTab, allTabs }) => {\n\n    const [currTab, changeCurrTab] = useState(allTabs[index]);\n\n    const handleRadioClick = (index, value) => {\n\n        let trueValue = value;\n        if(trueValue.length === 2)\n            trueValue = trueValue[1];\n        else if(trueValue.length === 1)\n            trueValue = trueValue[0];\n        else return;\n        const newTab = currTab;\n        newTab[index] = trueValue;\n        changeCurrTab([...newTab]);\n    }\n\n    const nextTab = () => {\n        saveTab(currTab);\n        if(index < allTabs.length - 1)\n            changeCurrTab([...allTabs[index+1]]);\n        changeIndex(index+1);\n    }\n\n    const prevTab = () => {\n        if(index <= 0) {\n            return;\n        }\n        saveTab(currTab);\n        if(index > 2)\n            changeCurrTab([...allTabs[index-1]]);\n        changeIndex(index-1);\n    }\n\n    return (\n        <>\n            <ListGroup>\n                {\n                questions.slice(index * questionsPerPage, index * questionsPerPage + questionsPerPage)\n                .map((question, i) => \n                <ListGroup.Item key={i}>\n                    <p>{question}</p>\n                        <ToggleButtonGroup name='value' type='checkbox' value={currTab[i]} onChange={val => handleRadioClick(i, val)}>\n                            <ToggleButton value={0}>1</ToggleButton>\n                            <ToggleButton value={1}>2</ToggleButton>\n                            <ToggleButton value={2}>3</ToggleButton>\n                        </ToggleButtonGroup>\n                </ListGroup.Item>\n                )}\n            </ListGroup>\n            <br />\n            <Button onClick={prevTab}>{\"<\"}-</Button>\n            <Button style={{float: 'right'}} onClick={nextTab}>-{\">\"}</Button>\n        </>\n    )\n}\n\nconst Pages = ({ active }) => {\n\n    return (\n        <div>\n            <ProgressBar now={active / 6 * 100} label={`${active} / 6`} />\n            <br />\n        </div>\n    )\n}\n\nexport default HollandTest;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport HollandTest from './test';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HollandTest />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}